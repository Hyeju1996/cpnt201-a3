"use strict";

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = getAllConfigs;

var _defaultConfigStubJs = _interopRequireDefault(require("../../stubs/defaultConfig.stub.js"));

var _featureFlags = require("../featureFlags");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function getAllConfigs(config) {
  var ref;
  var configs = ((ref = config === null || config === void 0 ? void 0 : config.presets) !== null && ref !== void 0 ? ref : [_defaultConfigStubJs["default"]]).slice().reverse().flatMap(function (preset) {
    return getAllConfigs(preset instanceof Function ? preset() : preset);
  });
  var features = {};
  var experimentals = Object.keys(features).filter(function (feature) {
    return (0, _featureFlags).flagEnabled(config, feature);
  }).map(function (feature) {
    return features[feature];
  });
  return [config].concat(_toConsumableArray(experimentals), _toConsumableArray(configs));
}