"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = collapseAdjacentRules;
var comparisonMap = {
  atrule: ['name', 'params'],
  rule: ['selector']
};
var types = new Set(Object.keys(comparisonMap));

function collapseAdjacentRules() {
  return function (root) {
    var currentRule = null;
    root.each(function (node) {
      if (!types.has(node.type)) {
        currentRule = null;
        return;
      }

      if (currentRule === null) {
        currentRule = node;
        return;
      }

      var properties = comparisonMap[node.type];

      var _property, _property1;

      if (node.type === 'atrule' && node.name === 'font-face') {
        currentRule = node;
      } else if (properties.every(function (property) {
        return ((_property = node[property]) !== null && _property !== void 0 ? _property : '').replace(/\s+/g, ' ') === ((_property1 = currentRule[property]) !== null && _property1 !== void 0 ? _property1 : '').replace(/\s+/g, ' ');
      })) {
        currentRule.append(node.nodes);
        node.remove();
      } else {
        currentRule = node;
      }
    });
  };
}