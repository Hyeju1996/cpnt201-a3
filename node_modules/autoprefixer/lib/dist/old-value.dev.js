"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var utils = require('./utils');

var OldValue =
/*#__PURE__*/
function () {
  function OldValue(unprefixed, prefixed, string, regexp) {
    _classCallCheck(this, OldValue);

    this.unprefixed = unprefixed;
    this.prefixed = prefixed;
    this.string = string || prefixed;
    this.regexp = regexp || utils.regexp(prefixed);
  }
  /**
   * Check, that value contain old value
   */


  _createClass(OldValue, [{
    key: "check",
    value: function check(value) {
      if (value.includes(this.string)) {
        return !!value.match(this.regexp);
      }

      return false;
    }
  }]);

  return OldValue;
}();

module.exports = OldValue;